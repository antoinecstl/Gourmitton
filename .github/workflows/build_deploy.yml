name: Build, and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-deploy:
    env:
      DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Check if environment variables are set
      - name: Debug environment variables
        run: |
          echo "DOCKER_REPOSITORY=$DOCKER_REPOSITORY"
          echo "DOCKER_USERNAME=$DOCKER_USERNAME"
          echo "DOCKER_PASSWORD is set"

      # Navigate to the gourmitton folder and install dependencies
      - name: Install dependencies
        run: |
          cd gourmitton
          npm install

      # Build the Next.js app
      - name: Build Next.js app
        run: |
          cd gourmitton
          npm run build

      # Get the latest version from Docker Hub
      - name: Get latest Docker image version
        id: get-latest-version
        run: |
          sudo apt-get install -y jq
          LATEST_TAG=$(curl -s https://hub.docker.com/v2/repositories/$DOCKER_REPOSITORY/tags | \
            jq -r '.results | map(.name | select(test("^v[0-9]+$"))) | sort | last')
          echo "LATEST_TAG=$LATEST_TAG"
          if [ -z "$LATEST_TAG" ]; then
            NEW_TAG="v1"
          else
            NEW_TAG="v$(( ${LATEST_TAG#v} + 1 ))"
          fi
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV


      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD

      # Build and push Docker image
      - name: Build and push Docker image
        run: |
          cd gourmitton
          docker build -t $DOCKER_REPOSITORY:latest .
          docker tag $DOCKER_REPOSITORY:latest $DOCKER_REPOSITORY:$NEW_TAG
          docker push $DOCKER_REPOSITORY:latest
          docker push $DOCKER_REPOSITORY:$NEW_TAG
